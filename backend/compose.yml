version: '3.8'

x-service: &service
  environment:
    - SPRING_PROFILES_ACTIVE=dev
    - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

x-db: &db
  image: postgres:16.0-alpine
  restart: always
  healthcheck:
    test: pg_isready -U postgres
    interval: 5s
    timeout: 5s
    retries: 5

x-db-env: &db-env
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

services:
  config-server:
    build: config-server
    ports:
      - '8888:8888'
    networks:
      - net-eureka-config
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
  eureka-server:
    build: discovery-service
    ports:
      - '8761:8761'
    networks:
      - net-eureka-config
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

    depends_on:
      - config-server
  user-service:
    <<: *service
    container_name: user-service
    build: user-service
    ports:
      - '8081:8081'
    networks:
      - net-userDB-userServ
      - net-postServ-userServ
      - net-apiGw-userServ
      - net-eureka-config
      - net-kafka-userServ
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      user-db-service:
        condition: service_healthy

  user-db-service:
    <<: *db
    environment:
      <<: *db-env
      POSTGRES_DB: user_db
    volumes:
      - vol-user-db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - net-userDB-userServ

  # post-service:
  #   <<: *service
  #   container_name: post-service
  #   build: post-service
  #   ports:
  #     - '8082:8082'
  #   networks:
  #     - net-postServ-userServ
  #     - net-postDB-postServ
  #     - net-apiGw-postServ
  #     - net-eureka-config
  #   depends_on:
  #     post-db-service:
  #       condition: service_healthy
  #     config-server:
  #       condition: service_healthy
  #     eureka-server:
  #       condition: service_healthy


  # post-db-service:
  #   <<: *db
  #   environment:
  #     <<: *db-env
  #     POSTGRES_DB: post_db
  #     PGPORT: 5433
  #   volumes:
  #     - vol-post-db:/var/lib/postgresql/data
  #   ports:
  #     - '5433:5433'
  #   networks:
  #     - net-postDB-postServ


  # api-gateway:
  #   <<: *service
  #   container_name: api-gateway
  #   build: gateway-service
  #   ports:
  #     - '8080:8080'
  #   networks:
  #     - net-apiGw-userServ
  #     - net-apiGw-postServ
  #     - net-keycloak-apiGw
  #     - net-eureka-config
  #   depends_on:
  #     - config-server
  #     - eureka-server
  #     - user-service
  #     - post-service
  #     - keycloak-service

  # angular-client:
  #   container_name: angular-client
  #   build:
  #     context: ../frontend
  #   ports:
  #     - '4200:4200'
  #   depends_on:
  #     - api-gateway
  #   volumes:
  #     - ./default.conf:/etc/nginx/conf.d/default.conf

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - net-kafka-zookeeper
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - net-kafka-userServ
      - net-kafka-zookeeper

  # keycloak-service:
  #   image: quay.io/keycloak/keycloak:23.0
  #   container_name: keycloak
  #   environment:
  #     - KEYCLOAK_ADMIN=admin
  #     - KEYCLOAK_ADMIN_PASSWORD=admin
  #     - KC_DB=postgres
  #     - KC_DB_URL_HOST=keycloak-db
  #     - KC_DB_URL_DATABASE=keycloak
  #     - KC_DB_USERNAME=postgres
  #     - KC_DB_PASSWORD=postgres
  #     - KC_DB_URL_PORT=5434
  #   volumes:
  #     - ./keycloak-service/themes:/opt/keycloak/themes
  #     - ./keycloak-service/realm-export.json:/opt/keycloak/data/import/realm-export.json
  #     - ./keycloak-utils/jar/keycloak-utils.jar:/opt/keycloak/providers/keycloak-utils.jar
  #   ports:
  #     - '8443:8443'
  #   networks:
  #     - net-keycloakDB-keycloakServ
  #     - net-keycloak-apiGw
  #   command:
  #     - "start-dev"
  #     - "--http-port=8443"
  #     - "--import-realm"
  #     - "--features=declarative-user-profile"
  #     - "--spi-theme-cache-themes=true"
  #   depends_on:
  #     keycloak-db:
  #       condition: service_healthy

  # keycloak-db:
  #   <<: *db
  #   environment:
  #     <<: *db-env
  #     POSTGRES_DB: keycloak
  #     PGPORT: 5434
  #   ports:
  #     - '5434:5434'
  #   networks:
  #     - net-keycloakDB-keycloakServ
  #   volumes:
  #     - vol-keycloak-db:/var/lib/postgresql/data

networks:
  net-postDB-postServ:
  net-userDB-userServ:
  net-postServ-userServ:
  net-apiGw-userServ:
  net-apiGw-postServ:
  net-keycloakDB-keycloakServ:
  net-keycloak-apiGw:
  net-eureka-config:

  net-kafka-userServ:
  net-kafka-zookeeper:

volumes:
  vol-user-db:
  vol-post-db:
  vol-keycloak-db:
