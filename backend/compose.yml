version: '3.8'

x-service: &service
  environment:
    - SPRING_PROFILES_ACTIVE=dev

x-db: &db
  image: postgres:16.0-alpine
  restart: always
  healthcheck:
    test: pg_isready -U postgres
    interval: 5s
    timeout: 5s
    retries: 5

x-db-env: &db-env
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

services:
  user-service:
    <<: *service
    build: user-service
    ports:
      - '8081:8081'
    networks:
      - net-userDB-userServ
      - net-postServ-userServ
      - net-apiGw-userServ
    depends_on:
      user-db-service:
        condition: service_healthy

  user-db-service:
    <<: *db
    environment:
      <<: *db-env
      POSTGRES_DB: user_db
    volumes:
      - vol-user-db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - net-userDB-userServ

  post-service:
    <<: *service
    build: post-service
    ports:
      - '8082:8082'
    networks:
      - net-postDB-postServ
      - net-postServ-userServ
      - net-apiGw-postServ
    depends_on:
      post-db-service:
        condition: service_healthy


  post-db-service:
    <<: *db
    environment:
      <<: *db-env
      POSTGRES_DB: post_db
      PGPORT: 5433
    volumes:
      - vol-post-db:/var/lib/postgresql/data
    ports:
      - '5433:5433'
    networks:
      - net-postDB-postServ
# TODO: add discovery service
#  eureka-service:
#    image: springcloud/eureka
#    build: discovery-service
#
#    ports:
#      - '8761:8761'
#    networks:
#        - net-postServ-userServ
#        - net-userDB-userServ
#        - net-postDB-postServ
#        - net-apiGw-userServ
#        - net-apiGw-postServ

  api-gateway:
    <<: *service
    build: gateway-service
    ports:
      - '8080:8080'
    networks:
      - net-apiGw-userServ
      - net-apiGw-postServ

networks:
  net-postDB-postServ:
  net-userDB-userServ:
  net-postServ-userServ:
  net-apiGw-userServ:
  net-apiGw-postServ:

volumes:
  vol-user-db:
  vol-post-db:
