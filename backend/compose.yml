version: '3.8'

x-service: &service
  environment:
    - SPRING_PROFILES_ACTIVE=dev

x-db: &db
  image: postgres:16.0-alpine
  restart: always
  healthcheck:
    test: pg_isready -U postgres
    interval: 5s
    timeout: 5s
    retries: 5

x-db-env: &db-env
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

services:
  user-service:
    <<: *service
    build: user-service
    ports:
      - '8081:8081'
    networks:
      - net-userDB-userServ
      - net-postServ-userServ
      - net-apiGw-userServ
    depends_on:
      user-db-service:
        condition: service_healthy

  user-db-service:
    <<: *db
    environment:
      <<: *db-env
      POSTGRES_DB: user_db
    volumes:
      - vol-user-db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - net-userDB-userServ

  post-service:
    <<: *service
    build: post-service
    ports:
      - '8082:8082'
    networks:
      - net-postDB-postServ
      - net-postServ-userServ
      - net-apiGw-postServ
    depends_on:
      post-db-service:
        condition: service_healthy


  post-db-service:
    <<: *db
    environment:
      <<: *db-env
      POSTGRES_DB: post_db
      PGPORT: 5433
    volumes:
      - vol-post-db:/var/lib/postgresql/data
    ports:
      - '5433:5433'
    networks:
      - net-postDB-postServ

  api-gateway:
    <<: *service
    build: gateway-service
    ports:
      - '8080:8080'
    networks:
      - net-apiGw-userServ
      - net-apiGw-postServ
      - net-keycloak-apiGw

  keycloak-service:
    image: quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_DB_URL_PORT=5434
    volumes:
      - ./keycloak-service/themes:/opt/keycloak/themes
      - ./keycloak-service/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./keycloak-utils/jar/keycloak-utils.jar:/opt/keycloak/providers/keycloak-utils.jar
    ports:
      - '8443:8443'
    networks:
      - net-keycloakDB-keycloakServ
      - net-keycloak-apiGw
    command:
      - "start-dev"
      - "--http-port=8443"
      - "--import-realm"
      - "--features=declarative-user-profile"
      - "--spi-theme-cache-themes=true"
    depends_on:
      keycloak-db:
        condition: service_healthy

  keycloak-db:
    <<: *db
    environment:
      <<: *db-env
      POSTGRES_DB: keycloak
      PGPORT: 5434
    ports:
      - '5434:5434'
    networks:
      - net-keycloakDB-keycloakServ
    volumes:
      - vol-keycloak-db:/var/lib/postgresql/data

  blob-service:
    <<: *service
    build: blob-service
    container_name: blob-service
    ports:
      - '8083:8083'
    networks:
      - net-apiGw-blobServ
      - net-blobServ-azurite
    depends_on:
      azurite:
        condition: service_healthy
      metadata-db:
        condition: service_healthy

  metadata-db:
    <<: *db
    environment:
      <<: *db-env
      POSTGRES_DB: metadata_db
      PGPORT: 5435
    ports:
      - '5435:5435'
    networks:
      - net-blobServ-azurite
    volumes:
      - vol-metadata-db:/var/lib/postgresql/data

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    ports:
      - '10000:10000'
      - '10001:10001'
      - '10002:10002'
    networks:
      - net-blobServ-azurite
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 1s
      retries: 30

networks:
  net-postDB-postServ:
  net-userDB-userServ:
  net-postServ-userServ:
  net-apiGw-userServ:
  net-apiGw-postServ:
  net-keycloakDB-keycloakServ:
  net-keycloak-apiGw:
  net-apiGw-blobServ:
  net-blobServ-azurite:

volumes:
  vol-user-db:
  vol-post-db:
  vol-keycloak-db:
  vol-metadata-db:
